package theatre2.dashboard.AdminDashboardFrames;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

public class Ticket extends javax.swing.JInternalFrame {

    private String ticketsFilePath = "src/theatre2/data/tickets.txt";
    private String showsFilePath = "src/theatre2/data/shows.txt";

    public Ticket() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);

        loadShowsToComboBox();
        loadTicketsToTable();

    }

    private void loadShowsToComboBox() {
        ShowDetailsComboBox.removeAllItems();
        try {
            FileReader fr = new FileReader(showsFilePath);
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                String[] p = line.split("\\|"); // movie|screen|date|start|end
                if (p.length >= 5) {
                    String display = p[0] + " | " + p[1] + " | " + p[2] + " | " + p[3] + " - " + p[4];
                    ShowDetailsComboBox.addItem(display);
                }
            }
            br.close();
            fr.close();
        } catch (java.io.FileNotFoundException e) {
            // ok if file not there yet
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading shows: " + e.getMessage());
        }
    }

    private void loadTicketsToTable() {
        DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
        model.setRowCount(0);
        try {
            FileReader fr = new FileReader(ticketsFilePath);
            BufferedReader br = new BufferedReader(fr);
            String line;
            int no = 1;
            while ((line = br.readLine()) != null) {
                String[] p = line.split("\\|"); // movie|screen|date|start|end|price
                if (p.length >= 6) {
                    model.addRow(new Object[]{
                        no++,
                        p[0], // Movie Name
                        p[1], // Screen Name
                        p[2], // Date
                        p[3], // Start Time
                        p[4], // End Time
                        p[5] // Ticket Price
                    });
                }
            }
            br.close();
            fr.close();
        } catch (java.io.FileNotFoundException e) {
            // ok if file not there yet
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading tickets: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        ShowDetailsComboBox = new javax.swing.JComboBox<>();
        discardButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ticketTable = new javax.swing.JTable();
        deleteTicketButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(1300, 900));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Price (In Taka)");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Show Details");

        priceField.setMinimumSize(new java.awt.Dimension(600, 30));
        priceField.setPreferredSize(new java.awt.Dimension(600, 30));
        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });

        ShowDetailsComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ShowDetailsComboBox.setMinimumSize(new java.awt.Dimension(72, 30));
        ShowDetailsComboBox.setPreferredSize(new java.awt.Dimension(600, 30));

        discardButton.setBackground(new java.awt.Color(204, 0, 51));
        discardButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        discardButton.setForeground(new java.awt.Color(255, 255, 255));
        discardButton.setText("Discard");
        discardButton.setMaximumSize(new java.awt.Dimension(190, 45));
        discardButton.setMinimumSize(new java.awt.Dimension(190, 45));
        discardButton.setPreferredSize(new java.awt.Dimension(190, 45));
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(0, 153, 153));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.setMaximumSize(new java.awt.Dimension(190, 45));
        saveButton.setMinimumSize(new java.awt.Dimension(190, 45));
        saveButton.setPreferredSize(new java.awt.Dimension(190, 45));
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saveButtonMousePressed(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(272, 272, 272)
                        .addComponent(discardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(ShowDetailsComboBox, 0, 535, Short.MAX_VALUE)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowDetailsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        ticketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Movie Name", "Screen Name", "Date", "Start Time", "End Time", "Ticket Price"
            }
        ));
        jScrollPane2.setViewportView(ticketTable);

        deleteTicketButton.setBackground(new java.awt.Color(204, 0, 51));
        deleteTicketButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteTicketButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteTicketButton.setText("Delete Ticket Price");
        deleteTicketButton.setMaximumSize(new java.awt.Dimension(190, 45));
        deleteTicketButton.setMinimumSize(new java.awt.Dimension(190, 45));
        deleteTicketButton.setPreferredSize(new java.awt.Dimension(190, 45));
        deleteTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTicketButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Ticket Price Database");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteTicketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteTicketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 572, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
        // TODO add your handling code here:
        if (ShowDetailsComboBox.getItemCount() > 0) {
            ShowDetailsComboBox.setSelectedIndex(0);
        }
        priceField.setText("");

    }//GEN-LAST:event_discardButtonActionPerformed

    private void saveButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonMousePressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here
        String sel = (String) ShowDetailsComboBox.getSelectedItem();
        String price = priceField.getText().trim();

        if (sel == null || sel.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a show.");
            return;
        }
        if (price.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter price.");
            return;
        }
        try {
            Integer.parseInt(price);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Price must be a number.");
            return;
        }

        // Parse: "Movie | Screen | Date | Start - End"
        String movie = "", screen = "", date = "", start = "", end = "";
        try {
            String[] parts = sel.split("\\|");
            if (parts.length >= 4) {
                movie = parts[0].trim();
                screen = parts[1].trim();
                date = parts[2].trim();
                String startEnd = parts[3].trim(); // "Start - End"
                String[] se = startEnd.split("-");
                if (se.length >= 2) {
                    start = se[0].trim();
                    end = se[1].trim();
                }
            }
        } catch (Exception ignore) {
        }

        if (movie.isEmpty() || screen.isEmpty() || date.isEmpty() || start.isEmpty() || end.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalid show format.");
            return;
        }

        String line = movie + "|" + screen + "|" + date + "|" + start + "|" + end + "|" + price;

        try {
            FileWriter fw = new FileWriter(ticketsFilePath, true);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(line);
            bw.newLine();
            bw.close();
            fw.close();

            JOptionPane.showMessageDialog(this, "Ticket saved.");
            loadTicketsToTable();
            discardButtonActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saving ticket: " + e.getMessage());
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTicketButtonActionPerformed
        // TODO add your handling code here:
        int row = ticketTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) ticketTable.getModel();
        String movie = String.valueOf(model.getValueAt(row, 1));
        String screen = String.valueOf(model.getValueAt(row, 2));
        String date = String.valueOf(model.getValueAt(row, 3));
        String start = String.valueOf(model.getValueAt(row, 4));
        String end = String.valueOf(model.getValueAt(row, 5));
        String price = String.valueOf(model.getValueAt(row, 6));

        String targetLine = movie + "|" + screen + "|" + date + "|" + start + "|" + end + "|" + price;

        List<String> keep = new ArrayList<>();
        try {
            FileReader fr = new FileReader(ticketsFilePath);
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                if (!line.equals(targetLine)) {
                    keep.add(line);
                }
            }
            br.close();
            fr.close();

            FileWriter fw = new FileWriter(ticketsFilePath, false);
            BufferedWriter bw = new BufferedWriter(fw);
            for (String l : keep) {
                bw.write(l);
                bw.newLine();
            }
            bw.close();
            fw.close();

            model.removeRow(row);
            for (int i = 0; i < model.getRowCount(); i++) {
                model.setValueAt(i + 1, i, 0); // reset No
            }

            JOptionPane.showMessageDialog(this, "Ticket deleted.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error deleting ticket: " + e.getMessage());
        }

    }//GEN-LAST:event_deleteTicketButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ShowDetailsComboBox;
    private javax.swing.JButton deleteTicketButton;
    private javax.swing.JButton discardButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField priceField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable ticketTable;
    // End of variables declaration//GEN-END:variables
}
