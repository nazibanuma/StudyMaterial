package theatre2.dashboard.AdminDashboardFrames;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.JOptionPane;


public class Movie extends javax.swing.JInternalFrame {

    private File selectedPosterFile = null;
    private String filepath = "src/theatre2/data/movies.txt";

    public Movie() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);

        movieTable.setModel(buildMovieTableModel());
        movieTable.setRowHeight(110);                       // make room for the poster
        movieTable.getColumnModel().getColumn(1).setMinWidth(80);
        movieTable.getColumnModel().getColumn(1).setMaxWidth(120);
        movieTable.getColumnModel().getColumn(0).setMaxWidth(60); // "No" column
        loadMoviesToTable();
    }

    private javax.swing.table.DefaultTableModel buildMovieTableModel() {
        return new javax.swing.table.DefaultTableModel(
                new String[]{"No", "Poster", "Movie Name", "Genre", "Language", "Release Date", "Duration", "Status"}, 0
        ) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return switch (columnIndex) {
                    case 0 ->
                        Integer.class;
                    case 1 ->
                        javax.swing.Icon.class; // <- important
                    default ->
                        String.class;
                };
            }

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
    }

    private javax.swing.ImageIcon loadThumbnail(String absPath, int w, int h) {
        try {
            java.awt.image.BufferedImage src = javax.imageio.ImageIO.read(new java.io.File(absPath));
            if (src == null) {
                return null; // unreadable/unsupported image
            }
            java.awt.Image scaled = src.getScaledInstance(w, h, java.awt.Image.SCALE_SMOOTH);
            return new javax.swing.ImageIcon(scaled);
        } catch (Exception e) {
            return null; // fall back gracefully
        }
    }

    private void loadMoviesToTable() {
        javax.swing.table.DefaultTableModel model = buildMovieTableModel();
        int count = 1;

        try (java.io.BufferedReader br = new java.io.BufferedReader(new java.io.FileReader(filepath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split("\\|");
                // Expecting: name|posterPath|trailer|actor|director|writer|genre|releaseDate|language|duration|status|synopsis
                if (parts.length >= 11) {
                    String posterPath = parts[1];
                    javax.swing.Icon posterIcon = loadThumbnail(posterPath, 75, 105); // ~ aspect ratio
                    if (posterIcon == null) {
                        // if image fails to load, show the file name as fallback
                        posterIcon = new javax.swing.ImageIcon(new byte[0]); // empty icon keeps column type = Icon
                    }

                    model.addRow(new Object[]{
                        count++,
                        posterIcon, // <- show image, not path
                        parts[0], // Movie Name
                        parts[6], // Genre
                        parts[8], // Language
                        parts[7], // Release Date
                        parts[9], // Duration
                        parts[10] // Status
                    });
                }
            }
        } catch (java.io.FileNotFoundException e) {
            // file might not exist yet â€” ignore
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error loading movies: " + e.getMessage());
        }

        movieTable.setModel(model); // set after fill (or set before; either is fine)
        movieTable.setRowHeight(110);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        movieTable = new javax.swing.JTable();
        deleteMovieButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        movieNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        posterLink = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        trailerLinkField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        actorNameField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        directorField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        writerField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        genreComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        languageField = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        seconfField = new javax.swing.JTextField();
        hourField = new javax.swing.JTextField();
        minutefield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        synopsisField = new javax.swing.JTextArea();
        uploadPosterButton = new javax.swing.JButton();
        discardButton = new javax.swing.JButton();
        dayField = new javax.swing.JComboBox<>();
        monthField = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        yearField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        uploadedPosterLinkLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        statusComboBox = new javax.swing.JComboBox<>();

        setMinimumSize(new java.awt.Dimension(1350, 900));
        setPreferredSize(new java.awt.Dimension(1350, 900));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        movieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Poster", "Movie Name", "Genre", "Language", "Release Date", "Duration", "Status"
            }
        ));
        jScrollPane2.setViewportView(movieTable);

        deleteMovieButton.setBackground(new java.awt.Color(204, 0, 51));
        deleteMovieButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteMovieButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteMovieButton.setText("Delete Movie");
        deleteMovieButton.setMaximumSize(new java.awt.Dimension(190, 45));
        deleteMovieButton.setMinimumSize(new java.awt.Dimension(190, 45));
        deleteMovieButton.setPreferredSize(new java.awt.Dimension(190, 45));
        deleteMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMovieButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Movie Database");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(deleteMovieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 992, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(0, 25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteMovieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1300, 900));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Poster");

        movieNameField.setMinimumSize(new java.awt.Dimension(600, 30));
        movieNameField.setPreferredSize(new java.awt.Dimension(600, 30));
        movieNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieNameFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Movie Name");

        posterLink.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Trailer Link");

        trailerLinkField.setMinimumSize(new java.awt.Dimension(600, 30));
        trailerLinkField.setPreferredSize(new java.awt.Dimension(600, 30));
        trailerLinkField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trailerLinkFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Actor");

        actorNameField.setMinimumSize(new java.awt.Dimension(600, 30));
        actorNameField.setPreferredSize(new java.awt.Dimension(600, 30));
        actorNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actorNameFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Director");

        directorField.setMinimumSize(new java.awt.Dimension(600, 30));
        directorField.setPreferredSize(new java.awt.Dimension(600, 30));
        directorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directorFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Writer");

        writerField.setMinimumSize(new java.awt.Dimension(600, 30));
        writerField.setPreferredSize(new java.awt.Dimension(600, 30));
        writerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writerFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Genre");

        genreComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Genre", "Action", "Adventure", "Animation", "Biography", "Comedy", "Crime", "Documentary", "Drama", "Family", "Fantasy", "Film-Noir", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriller", "War", "Western", "Superhero" }));
        genreComboBox.setMinimumSize(new java.awt.Dimension(72, 30));
        genreComboBox.setPreferredSize(new java.awt.Dimension(600, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Language");

        languageField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        languageField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Language", "Bangla", "English", "Hindi" }));
        languageField.setMinimumSize(new java.awt.Dimension(72, 30));
        languageField.setPreferredSize(new java.awt.Dimension(600, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Duration (H/M/S)");

        seconfField.setToolTipText("Second");
        seconfField.setMinimumSize(new java.awt.Dimension(600, 30));
        seconfField.setPreferredSize(new java.awt.Dimension(600, 30));
        seconfField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seconfFieldActionPerformed(evt);
            }
        });

        hourField.setToolTipText("Hour");
        hourField.setMinimumSize(new java.awt.Dimension(600, 30));
        hourField.setPreferredSize(new java.awt.Dimension(600, 30));
        hourField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourFieldActionPerformed(evt);
            }
        });

        minutefield.setToolTipText("Minute");
        minutefield.setMinimumSize(new java.awt.Dimension(600, 30));
        minutefield.setPreferredSize(new java.awt.Dimension(600, 30));
        minutefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutefieldActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Synopsis");

        synopsisField.setColumns(20);
        synopsisField.setRows(5);
        jScrollPane1.setViewportView(synopsisField);

        uploadPosterButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        uploadPosterButton.setText("Upload Poster");
        uploadPosterButton.setPreferredSize(new java.awt.Dimension(75, 30));
        uploadPosterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                uploadPosterButtonMousePressed(evt);
            }
        });
        uploadPosterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPosterButtonActionPerformed(evt);
            }
        });

        discardButton.setBackground(new java.awt.Color(204, 0, 51));
        discardButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        discardButton.setForeground(new java.awt.Color(255, 255, 255));
        discardButton.setText("Discard");
        discardButton.setMaximumSize(new java.awt.Dimension(190, 45));
        discardButton.setMinimumSize(new java.awt.Dimension(190, 45));
        discardButton.setPreferredSize(new java.awt.Dimension(190, 45));
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        dayField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dayField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayFieldActionPerformed(evt);
            }
        });

        monthField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Release Date");

        yearField.setText("2000");

        saveButton.setBackground(new java.awt.Color(0, 153, 153));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.setMaximumSize(new java.awt.Dimension(190, 45));
        saveButton.setMinimumSize(new java.awt.Dimension(190, 45));
        saveButton.setPreferredSize(new java.awt.Dimension(190, 45));
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saveButtonMousePressed(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        uploadedPosterLinkLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        uploadedPosterLinkLabel.setForeground(new java.awt.Color(0, 153, 255));
        uploadedPosterLinkLabel.setMaximumSize(new java.awt.Dimension(66, 30));
        uploadedPosterLinkLabel.setMinimumSize(new java.awt.Dimension(66, 30));
        uploadedPosterLinkLabel.setPreferredSize(new java.awt.Dimension(66, 30));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Status");

        statusComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Upcoming", "Showing", "Ended" }));
        statusComboBox.setMinimumSize(new java.awt.Dimension(72, 30));
        statusComboBox.setPreferredSize(new java.awt.Dimension(600, 30));
        statusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(uploadedPosterLinkLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uploadPosterButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(movieNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(posterLink, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(discardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(hourField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minutefield, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seconfField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addComponent(languageField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(genreComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(writerField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(directorField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actorNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trailerLinkField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(posterLink, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uploadPosterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(uploadedPosterLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trailerLinkField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actorNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directorField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(writerField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(languageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seconfField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minutefield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void movieNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieNameFieldActionPerformed

    private void trailerLinkFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trailerLinkFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trailerLinkFieldActionPerformed

    private void actorNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actorNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actorNameFieldActionPerformed

    private void directorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directorFieldActionPerformed

    private void writerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_writerFieldActionPerformed

    private void seconfFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seconfFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seconfFieldActionPerformed

    private void hourFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hourFieldActionPerformed

    private void minutefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minutefieldActionPerformed

    private void uploadPosterButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadPosterButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_uploadPosterButtonMousePressed

    private void uploadPosterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPosterButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser poster = new JFileChooser();
        poster.setDialogTitle("Choose poster image");
        poster.setFileFilter(new FileNameExtensionFilter("Images (jpg, jpeg, png, webp)",
                "jpg", "jpeg", "png", "webp"));
        int response = poster.showOpenDialog(this);
        if (response == JFileChooser.APPROVE_OPTION) {
            selectedPosterFile = poster.getSelectedFile();
            uploadedPosterLinkLabel.setText(selectedPosterFile.getAbsolutePath());
        }
    }//GEN-LAST:event_uploadPosterButtonActionPerformed

    private void saveButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonMousePressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        String movieName = movieNameField.getText().trim();
        String trailer = trailerLinkField.getText().trim();
        String actor = actorNameField.getText().trim();
        String director = directorField.getText().trim();
        String writer = writerField.getText().trim();
        String genre = (String) genreComboBox.getSelectedItem();
        String day = (String) dayField.getSelectedItem();
        String month = (String) monthField.getSelectedItem();
        String year = yearField.getText().trim();
        String language = (String) languageField.getSelectedItem();
        String h = hourField.getText().trim();
        String m = minutefield.getText().trim();
        String s = seconfField.getText().trim();
        String status = (String) statusComboBox.getSelectedItem();
        String synopsis = synopsisField.getText().trim();

        if (movieName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Movie name is required.");
            return;
        }
        if (selectedPosterFile == null) {
            JOptionPane.showMessageDialog(this, "Please upload a poster.");
            return;
        }

        if (h.isEmpty()) {
            h = "0";
        }
        if (m.isEmpty()) {
            m = "0";
        }
        if (s.isEmpty()) {
            s = "0";
        }

        String releaseDate = day + " " + month + " " + year;
        String duration = h + ":" + m + ":" + s;

        // Copy the poster to images folder
        String imageFolderPath = "D:\\Study Material\\Pupil\\Numa\\CSE215\\Project\\Theatre2\\src\\theatre2\\poster\\";
        new File(imageFolderPath).mkdirs(); // make sure folder exists
        String imageFileName = selectedPosterFile.getName();
        System.out.println("imageFileName = " + imageFileName);
        File destFile = new File(imageFolderPath + imageFileName);

        try {
            java.nio.file.Files.copy(
                    selectedPosterFile.toPath(),
                    destFile.toPath(),
                    java.nio.file.StandardCopyOption.REPLACE_EXISTING
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saving image: " + e.getMessage());
            return;
        }

        // Save movie details to movies.txt
        String relativeImagePath = "D:\\Study Material\\Pupil\\Numa\\CSE215\\Project\\Theatre2\\src\\theatre2\\poster\\" + imageFileName;
        String line = movieName + "|" + relativeImagePath + "|" + trailer + "|" + actor + "|" + director + "|"
                + writer + "|" + genre + "|" + releaseDate + "|" + language + "|" + duration + "|" + status + "|" + synopsis;

        try {
            java.io.FileWriter fw = new java.io.FileWriter(filepath, true);
            java.io.BufferedWriter bw = new java.io.BufferedWriter(fw);
            bw.write(line);
            bw.newLine();
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(this, "Movie saved successfully.");

            // Clear form
            discardButtonActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saving movie data: " + e.getMessage());
        }
        loadMoviesToTable();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
        // TODO add your handling code here:
        movieNameField.setText("");
        trailerLinkField.setText("");
        actorNameField.setText("");
        directorField.setText("");
        writerField.setText("");
        genreComboBox.setSelectedIndex(0);
        dayField.setSelectedIndex(0);
        monthField.setSelectedIndex(0);
        yearField.setText("2000");
        languageField.setSelectedIndex(0);
        hourField.setText("");
        minutefield.setText("");
        seconfField.setText("");
        statusComboBox.setSelectedIndex(0);
        synopsisField.setText("");
        uploadedPosterLinkLabel.setText("");
        selectedPosterFile = null;
    }//GEN-LAST:event_discardButtonActionPerformed

    private void dayFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayFieldActionPerformed

    private void statusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusComboBoxActionPerformed

    private void deleteMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMovieButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = movieTable.getSelectedRow();
        if (selectedRow <= 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) movieTable.getModel();
        String movieName = (String) model.getValueAt(selectedRow, 2); // Movie Name column

        // Remove from table
        model.removeRow(selectedRow);

        // Remove from file
        try {
            java.util.List<String> lines = java.nio.file.Files.readAllLines(java.nio.file.Paths.get(filepath));
            java.util.List<String> newLines = new java.util.ArrayList<>();
            for (String line : lines) {
                if (!line.startsWith(movieName + "|")) { // match by movie name
                    newLines.add(line);
                }
            }
            java.nio.file.Files.write(java.nio.file.Paths.get(filepath), newLines);
            JOptionPane.showMessageDialog(this, "Movie deleted.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error deleting movie: " + e.getMessage());
        }


    }//GEN-LAST:event_deleteMovieButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actorNameField;
    private javax.swing.JComboBox<String> dayField;
    private javax.swing.JButton deleteMovieButton;
    private javax.swing.JTextField directorField;
    private javax.swing.JButton discardButton;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JTextField hourField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> languageField;
    private javax.swing.JTextField minutefield;
    private javax.swing.JComboBox<String> monthField;
    private javax.swing.JTextField movieNameField;
    private javax.swing.JTable movieTable;
    private javax.swing.JLabel posterLink;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField seconfField;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JTextArea synopsisField;
    private javax.swing.JTextField trailerLinkField;
    private javax.swing.JButton uploadPosterButton;
    private javax.swing.JLabel uploadedPosterLinkLabel;
    private javax.swing.JTextField writerField;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
