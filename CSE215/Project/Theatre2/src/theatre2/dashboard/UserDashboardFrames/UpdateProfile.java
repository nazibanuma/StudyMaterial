package theatre2.dashboard.UserDashboardFrames;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import theatre2.dashboard.UserDashboard;

public class UpdateProfile extends javax.swing.JInternalFrame {

    private String loggedInUsername;
    private String filepath = "src/theatre2/data/users.txt";

    public UpdateProfile(String username) {//userDash updateProfileActionPerformed er constructor
        this.loggedInUsername = username;
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);

        loadUserToFields();
    }

    private void loadUserToFields() { 
        if (loggedInUsername == null || loggedInUsername.trim().isEmpty()) {
            return;
        }

        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(filepath));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.trim().isEmpty()) {
                    continue;
                }

                String[] p = line.split("\\|"); // username|Name|Gender|Phone|Email|Address
                if (p.length >= 6 && p[0].trim().equalsIgnoreCase(loggedInUsername)) {
                    nameField.setText(p[1].trim());

                    // ----- set gender combo -----
                    String g = p[2].trim();
                    boolean matched = false;
                    for (int i = 0; i < genderComboBox.getItemCount(); i++) {
                        if (g.equalsIgnoreCase(genderComboBox.getItemAt(i))) {
                            genderComboBox.setSelectedIndex(i);
                            matched = true;
                            break;
                        }
                    }
                    if (!matched) {
                        // fallback to first option if no match
                        if (genderComboBox.getItemCount() > 0) {
                            genderComboBox.setSelectedIndex(0);
                        }
                    }
                    // ----------------------------

                    phoneNumberField.setText(p[3].trim());
                    EmailField.setText(p[4].trim());
                    addressField.setText(p[5].trim());
                    break;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading user: " + e.getMessage());
        } finally {
            try {
                if (br != null) {
                    br.close();
                }
            } catch (Exception ignore) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        phoneNumberField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        updateProfileButton = new javax.swing.JButton();
        genderComboBox = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Gender:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Email:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Phone Number:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Address:");

        nameField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameField.setForeground(new java.awt.Color(0, 0, 0));

        phoneNumberField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberField.setForeground(new java.awt.Color(0, 0, 0));
        phoneNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberFieldActionPerformed(evt);
            }
        });

        EmailField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EmailField.setForeground(new java.awt.Color(0, 0, 0));

        addressField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addressField.setForeground(new java.awt.Color(0, 0, 0));

        updateProfileButton.setBackground(new java.awt.Color(0, 153, 153));
        updateProfileButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateProfileButton.setForeground(new java.awt.Color(255, 255, 255));
        updateProfileButton.setText("Update Profile");
        updateProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProfileButtonActionPerformed(evt);
            }
        });

        genderComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "3rd Gender" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                            .addComponent(genderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(96, 96, 96)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(phoneNumberField)
                            .addComponent(EmailField)
                            .addComponent(addressField, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)))
                    .addComponent(updateProfileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(nameField))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(genderComboBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(phoneNumberField))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(EmailField))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(addressField))
                .addGap(32, 32, 32)
                .addComponent(updateProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(214, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void phoneNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberFieldActionPerformed

    private void updateProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProfileButtonActionPerformed
        // TODO add your handling code here:
        String name = nameField.getText().trim();
        String gender = (String) genderComboBox.getSelectedItem();  // <-- from combo
        if (gender == null) {
            gender = "";
        }

        String phone = phoneNumberField.getText().trim();
        String email = EmailField.getText().trim();
        String addr = addressField.getText().trim();

        if (loggedInUsername == null || loggedInUsername.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No username to update.");
            return;
        }

        String updated = loggedInUsername + "|" + name + "|" + gender + "|" + phone + "|" + email + "|" + addr;

        BufferedReader br = null;
        StringBuilder all = new StringBuilder();
        boolean found = false;
        try {
            br = new BufferedReader(new FileReader(filepath));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.startsWith(loggedInUsername + "|")) {
                    all.append(updated).append("\n");
                    found = true;
                } else {
                    all.append(line).append("\n");
                }
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error reading file: " + e.getMessage());
            return;
        } finally {
            try {
                if (br != null) {
                    br.close();
                }
            } catch (Exception ignore) {
            }
        }

        if (!found) {
            javax.swing.JOptionPane.showMessageDialog(this, "User not found in file.");
            return;
        }

        BufferedWriter bw = null;
        try {
            bw = new BufferedWriter(new FileWriter(filepath, false));
            bw.write(all.toString());
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error saving: " + e.getMessage());
            return;
        } finally {
            try {
                if (bw != null) {
                    bw.close();
                }
            } catch (Exception ignore) {
            }
        }

        // refresh header on the open UserDashboard
        java.awt.Window owner = javax.swing.SwingUtilities.getWindowAncestor(this);
        if (owner instanceof theatre2.dashboard.UserDashboard) {
            theatre2.dashboard.UserDashboard ud = (theatre2.dashboard.UserDashboard) owner;
            ud.setHeaderText(name.isEmpty() ? loggedInUsername : name, phone);
            ud.refreshHeader();
        }

        javax.swing.JOptionPane.showMessageDialog(this, "Profile updated.");
    }//GEN-LAST:event_updateProfileButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EmailField;
    private javax.swing.JTextField addressField;
    private javax.swing.JComboBox<String> genderComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JButton updateProfileButton;
    // End of variables declaration//GEN-END:variables
}
